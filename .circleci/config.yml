version: 2.1

orbs:
  # Using 1.0 of the Orbs means it will use the latest 1.0.x version from https://github.com/wordpress-mobile/circleci-orbs
  ios: wordpress-mobile/ios@1.0
  git: wordpress-mobile/git@1.0
  slack: circleci/slack@3.4.2

parameters:
  translation_review_build:
    type: boolean
    default: false
  translation_review_lang_id:
    type: string
    default: all-lang

commands:
  fix-path:
    steps:
      - run:
          name: Fix $PATH
          command: |
            # Add `/usr/local/bin` to the Xcode 11.2 image's $PATH in order to be able to use dependencies

            if [ $(echo $PATH | ruby -e "puts Kernel.gets.include?('/usr/local/bin')") != "true" ]; then
              echo 'export PATH=/usr/local/bin:$PATH' >> $BASH_ENV
              echo "Manually added `/usr/local/bin` to the $PATH:"
              echo $PATH
            fi

jobs:
  Build Tests:
    executor:
      name: ios/default
      xcode-version: "11.2.1"
    steps:
      - git/shallow-checkout
      - ios/install-dependencies:
            bundle-install: true
            pod-install: true
            cache-prefix: cache-prefix-{{ checksum ".circleci/cache-version" }}
      - run:
          name: Install Dependencies
          command: rake dependencies
      - ios/xcodebuild:
          command: build-for-testing
          arguments: -workspace 'WordPress.xcworkspace' -scheme 'WordPress' -configuration 'Debug' -sdk iphonesimulator -derivedDataPath DerivedData
      - persist_to_workspace:
          root: ./
          paths:
            - DerivedData/Build/Products
            - Pods/WordPressMocks
            - vendor/bundle
  Unit Tests:
    executor:
      name: ios/default
      xcode-version: "11.2.1"
    steps:
      - fix-path
      - git/shallow-checkout
      - ios/boot-simulator:
          xcode-version: "11.2.1"
          device: iPhone 11
      - attach_workspace:
          at: ./
      - run:
          name: Prepare Bundle
          command: bundle --path vendor/bundle
      - ios/wait-for-simulator
      - run:
          name: Run Unit Tests
          working_directory: Scripts
          command: bundle exec fastlane test_without_building xctestrun:DerivedData/Build/Products/WordPress_WordPressUnitTests_iphonesimulator13.2-x86_64.xctestrun destination:"platform=iOS Simulator,id=$SIMULATOR_UDID" try_count:3
      - ios/save-xcodebuild-artifacts:
          result-bundle-path: build/results
  UI Tests:
    parameters:
      device:
        type: string
      post-to-slack:
        description: Post to Slack when tests fail. SLACK_WEBHOOK ENV variable must be set.
        type: boolean
        default: false
    executor:
      name: ios/default
      xcode-version: "11.2.1"
    steps:
      - fix-path
      - git/shallow-checkout
      - ios/boot-simulator:
          xcode-version: "11.2.1"
          device: << parameters.device >>
      - attach_workspace:
          at: ./
      - run:
          name: Prepare Bundle
          command: bundle --path vendor/bundle
      - run:
          name: Run mocks
          command: ./Pods/WordPressMocks/scripts/start.sh 8282
          background: true
      - ios/wait-for-simulator
      - run:
          name: Run UI Tests
          working_directory: Scripts
          command: bundle exec fastlane test_without_building xctestrun:DerivedData/Build/Products/WordPress_WordPressUITests_iphonesimulator13.2-x86_64.xctestrun destination:"platform=iOS Simulator,id=$SIMULATOR_UDID" try_count:3
      - ios/save-xcodebuild-artifacts:
          result-bundle-path: build/results
      - when:
          condition: << parameters.post-to-slack >>
          steps:
            - run:
                name: Prepare Slack message
                when: always
                command: |
                  # Get the name of the device that is running. Using "<< parameters.device >>" can cause slack formatting errors.
                  DEVICE_NAME=$(xcrun simctl list -j | jq -r --arg UDID $SIMULATOR_UDID '.devices[] | .[] | select(.udid == "\($UDID)") | .name')
                  echo "export SLACK_FAILURE_MESSAGE=':red_circle: WordPress iOS UI tests failed on ${DEVICE_NAME} in \`${CIRCLE_BRANCH}\` branch by ${CIRCLE_USERNAME}.\n\nPlease reach out in #platform9 if you think this failure is not caused by your changes, so we can investigate.'" >> $BASH_ENV
            - slack/status:
                fail_only: true
                include_job_number_field: false
                include_project_field: false
                failure_message: '${SLACK_FAILURE_MESSAGE}'
  Installable Build:
    executor:
      name: ios/default
      xcode-version: "11.2.1"
    steps:
      - git/shallow-checkout
      - ios/install-dependencies:
            bundle-install: true
            pod-install: true
            cache-prefix: cache-prefix-{{ checksum ".circleci/cache-version" }}
      - run:
          name: Copy Secrets
          command: bundle exec fastlane run configure_apply
      - run:
          name: Build
          working_directory: Scripts
          command: "bundle exec fastlane build_and_upload_installable_build build_number:$CIRCLE_BUILD_NUM"
      - run:
          name: Prepare Artifacts
          command: |
            mkdir -p Artifacts
            mv "Scripts/fastlane/comment.json" "Artifacts/comment.json"
      - store_artifacts:
          path: Artifacts
          destination: Artifacts
  Release Build:
    executor: 
      name: ios/default
      xcode-version: "11.2.1"
    environment:
      HOMEBREW_NO_AUTO_UPDATE: 1
    steps:
      - git/shallow-checkout
      - ios/install-dependencies:
            bundle-install: true
            pod-install: true
            cache-prefix: cache-prefix-{{ checksum ".circleci/cache-version" }}
      - run: 
          name: Copy Secrets
          command: bundle exec fastlane run configure_apply
      - run: 
          name: Install other tools
          command: |
            brew unlink python@2
            brew install imagemagick
            brew install ghostscript
            curl -sL https://sentry.io/get-cli/ | bash
      - run:
          name: Build
          working_directory: Scripts
          command: |
            APP_VERSION=$(cat ../config/Version.Public.xcconfig | grep "^VERSION_LONG" | cut -d "=" -f2)
            echo "export SLACK_FAILURE_MESSAGE=':red_circle: Build for WordPress iOS $APP_VERSION failed!'" >> $BASH_ENV
            echo "export SLACK_SUCCESS_MESSAGE=':tada: WordPress iOS $APP_VERSION has been deployed!'" >> $BASH_ENV 
            bundle exec fastlane build_and_upload_release skip_confirm:true
          no_output_timeout: 60m
      - slack/status:
          include_job_number_field: false
          include_project_field: false
          include_visit_job_action: false
          webhook: '${SLACK_BUILD_WEBHOOK}'
          failure_message: '${SLACK_FAILURE_MESSAGE}'
          success_message: '${SLACK_SUCCESS_MESSAGE}'
  translation-review-build:
    executor: 
      name: ios/default
      xcode-version: "11.2.1"
    environment:
      HOMEBREW_NO_AUTO_UPDATE: 1
    steps:
      - git/shallow-checkout
      - ios/install-dependencies:
            bundle-install: true
            pod-install: true
            cache-prefix: cache-prefix-{{ checksum ".circleci/cache-version" }}
      - run: 
          name: Copy Secrets
          command: bundle exec fastlane run configure_apply
      - run: 
          name: Install other tools
          command: |
            brew unlink python@2
            brew install imagemagick
            brew install ghostscript
            curl -sL https://sentry.io/get-cli/ | bash
      - run:
          name: Build
          working_directory: Scripts
          command: | 
            orig_version=`cat ../config/Version.internal.xcconfig | grep VERSION_SHORT | cut -d'=' -f2`
            sed -i '' "$(awk '/^VERSION_SHORT/{ print NR; exit }' "../config/Version.internal.xcconfig")s/=.*/="${orig_version}"-`date +"%Y%d%m"`-"${CIRCLE_BUILD_NUM}"/" "../config/Version.internal.xcconfig"
            bundle exec fastlane build_for_translation_review

            VERSION_NAME="all-lang-build-${CIRCLE_BUILD_NUM}"
            echo "export VERSION_NAME=$VERSION_NAME" >> $BASH_ENV

            mkdir -p ../Artifacts
            mv /var/tmp/Debug-iphonesimulator/WordPress.zip "../Artifacts/WordPress-${VERSION_NAME}.zip"
          no_output_timeout: 60m
      - run: 
          name: Upload APP
          command: |
            curl --http1.1 https://${APPET_TOKEN}@api.appetize.io/v1/apps/${APPET_APPID} -F "file=@Artifacts/WordPress-${VERSION_NAME}.zip" -F "platform=ios"
      - store_artifacts:
          path: Artifacts
          destination: Artifacts

workflows:
  wordpress_ios:
    unless: << pipeline.parameters.translation_review_build >>
    jobs:
      - Build Tests
      - Unit Tests:
          requires: [ "Build Tests" ]
      # Always run UI tests on develop and release branches
      - UI Tests:
          name: UI Tests (iPhone 11)
          device: iPhone 11
          post-to-slack: true
          requires: [ "Build Tests" ]
          filters:
            branches:
              only:
                - develop
                - /^release.*/
      - UI Tests:
          name: UI Tests (iPad Air 3rd generation)
          device: iPad Air \\(3rd generation\\)
          post-to-slack: true
          requires: [ "Build Tests" ]
          filters:
            branches:
              only:
                - develop
                - /^release.*/
      #Optionally run UI tests on PRs
      - Optional Tests:
          type: approval
          requires: [ "Build Tests" ]
          filters:
            branches:
              ignore:
                - develop
                - /^release.*/
      - UI Tests:
          name: UI Tests (iPhone 11)
          device: iPhone 11
          requires: [ "Optional Tests" ]
      - UI Tests:
          name: UI Tests (iPad Air 3rd generation)
          device: iPad Air \\(3rd generation\\)
          requires: [ "Optional Tests" ]
  Installable Build:
    unless: << pipeline.parameters.translation_review_build >>
    jobs:
      - Hold:
          type: approval
          filters:
            branches:
              ignore: /pull\/[0-9]+/
      - Installable Build:
          requires: [Hold]  
          filters:
            branches:
              ignore: /pull\/[0-9]+/
  Release Build:
    unless: << pipeline.parameters.translation_review_build >>
    jobs:
      - Release Build: 
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^\d.\d?(.\d)?(.\d)?(.\d{1,4})$/
  Translation Review Build:
    when: << pipeline.parameters.translation_review_build >>
    jobs:
      - translation-review-build

