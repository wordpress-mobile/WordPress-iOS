version: 2.1

orbs:
  # Using 1.0 of the Orbs means it will use the latest 1.0.x version from https://github.com/wordpress-mobile/circleci-orbs
  ios: wordpress-mobile/ios@1.0
  git: wordpress-mobile/git@1.0
  slack: circleci/slack@3.4.2

parameters:
  translation_review_build:
    type: boolean
    default: false
  translation_review_lang_id:
    type: string
    default: all-lang
  beta_build:
    type: boolean
    default: false
  release_build:
    type: boolean
    default: false

xcode_version: &xcode_version
  xcode-version: "12.1.0"

iphone_test_device: &iphone_test_device
  device: iPhone 11
  ios-version: "14.1"

ipad_test_device: &ipad_test_device
  device: iPad Air (4th generation)
  ios-version: "14.1"

commands:
  fix-image:
    steps:
      - run:
          name: Fix CI Image
          command: |
            # Add `/usr/local/bin` to the Xcode 11.2 image's $PATH in order to be able to use dependencies

            if [ $(echo $PATH | ruby -e "puts Kernel.gets.include?('/usr/local/bin')") != "true" ]; then
              echo 'export PATH=/usr/local/bin:$PATH' >> $BASH_ENV
              echo "Manually added `/usr/local/bin` to the $PATH:"
              echo $PATH
            fi

            chruby ruby-2.6.6
            gem install bundler

jobs:
  Build Tests:
    parameters:
      device:
        type: string
        description: The device (e.g. "iPhone 11") to use when compiling the build.
      ios-version:
        description: The iOS deployment target (e.g. "13.0") used to compile the build that will be used for testing.
        type: string
    executor:
      name: ios/default
      <<: *xcode_version
    steps:
      - fix-image
      - git/shallow-checkout
      - ios/install-dependencies:
            bundle-install: true
            pod-install: true
            cache-prefix: cache-prefix-{{ checksum ".circleci/cache-version" }}
      - run:
          name: Install Dependencies
          command: rake dependencies
      - run:
          name: Build for Testing
          command: bundle exec fastlane build_for_testing device:'<< parameters.device >>' ios-version:'<< parameters.ios-version >>'
      - persist_to_workspace:
          root: ./
          paths:
            - DerivedData/Build/Products
            - Pods/WordPressMocks
            - vendor/bundle
  Unit Tests:
    parameters:
      device:
        type: string
        description: The device (e.g. "iPhone 11") to use when running unit tests.
      ios-version:
        description: The iOS version (e.g. "14.0") of the device used to run tests.
        type: string
    executor:
      name: ios/default
      <<: *xcode_version
    steps:
      - fix-image
      - git/shallow-checkout
      - attach_workspace:
          at: ./
      - run:
          name: Prepare Bundle
          command: bundle --path vendor/bundle
      - run:
          name: Run Unit Tests
          command: bundle exec fastlane test_without_building name:WordPressUnitTests try_count:3 device:'<< parameters.device >>' ios-version:'<< parameters.ios-version >>'
      - ios/save-xcodebuild-artifacts:
          result-bundle-path: build/results
  UI Tests:
    parameters:
      device:
        type: string
        description: The device (e.g. "iPhone 11") to use when running tests.
      ios-version:
        description: The iOS version (e.g. "14.0") of the device used to run tests.
        type: string
      post-to-slack:
        description: Post to Slack when tests fail. SLACK_WEBHOOK ENV variable must be set.
        type: boolean
        default: false
    executor:
      name: ios/default
      <<: *xcode_version
    steps:
      - fix-image
      - git/shallow-checkout
      - attach_workspace:
          at: ./
      - run:
          name: Prepare Bundle
          command: bundle --path vendor/bundle
      - run:
          name: Run mocks
          command: ./Pods/WordPressMocks/scripts/start.sh 8282
          background: true
      - run:
          name: Run UI Tests
          command: bundle exec fastlane test_without_building name:WordPressUITests try_count:3 device:'<< parameters.device >>' ios-version:'<< parameters.ios-version >>'
      - ios/save-xcodebuild-artifacts:
          result-bundle-path: build/results
      - when:
          condition: << parameters.post-to-slack >>
          steps:
            - run:
                name: Prepare Slack message
                when: always
                command: |
                  # Get the name of the device that is running.
                  echo "export SLACK_FAILURE_MESSAGE=':red_circle: WordPress iOS UI tests failed on << parameters.device >> in \`${CIRCLE_BRANCH}\` branch by ${CIRCLE_USERNAME}.\n\nPlease reach out in #platform9 if you think this failure is not caused by your changes, so we can investigate.'" >> $BASH_ENV
            - slack/status:
                fail_only: true
                include_job_number_field: false
                include_project_field: false
                failure_message: '${SLACK_FAILURE_MESSAGE}'
  Installable Build:
    executor:
      name: ios/default
      <<: *xcode_version
    steps:
      - fix-image
      - git/shallow-checkout
      - ios/install-dependencies:
            bundle-install: true
            pod-install: true
            cache-prefix: cache-prefix-{{ checksum ".circleci/cache-version" }}
      - run:
          name: Copy Secrets
          command: bundle exec fastlane run configure_apply
      - run:
          name: Build
          command: "bundle exec fastlane build_and_upload_installable_build build_number:$CIRCLE_BUILD_NUM"
      - run:
          name: Prepare Artifacts
          command: |
            mkdir -p Artifacts
            mv "fastlane/comment.json" "Artifacts/comment.json"
      - store_artifacts:
          path: Artifacts
          destination: Artifacts
  Release Build:
    executor:
      name: ios/default
      <<: *xcode_version
    environment:
      HOMEBREW_NO_AUTO_UPDATE: 1
    steps:
      - fix-image
      - run:
          name: Setup Notifications
          command: |
            echo "export SLACK_FAILURE_MESSAGE=':red_circle: Build for WordPress iOS failed!'" >> $BASH_ENV
      - git/shallow-checkout
      - ios/install-dependencies:
            bundle-install: true
            pod-install: true
            cache-prefix: cache-prefix-{{ checksum ".circleci/cache-version" }}
      - run:
          name: Copy Secrets
          command: bundle exec fastlane run configure_apply
      - run:
          name: Install other tools
          command: |
            brew install imagemagick
            brew install ghostscript
            curl -sL https://sentry.io/get-cli/ | bash
      - run:
          name: Setup notifications
          command: |
            APP_VERSION=$(cat config/Version.Public.xcconfig | grep "^VERSION_LONG" | cut -d "=" -f2)
            echo "export SLACK_FAILURE_MESSAGE=':red_circle: Build for WordPress iOS $APP_VERSION failed!'" >> $BASH_ENV
            echo "export SLACK_SUCCESS_MESSAGE=':tada: WordPress iOS $APP_VERSION has been deployed!'" >> $BASH_ENV
      - when:
          condition: << pipeline.parameters.beta_build >>
          steps:
            - run:
                name: Build
                command: |
                  bundle exec fastlane build_and_upload_beta_release skip_confirm:true create_gh_release:true
                no_output_timeout: 60m
      - when:
          condition: << pipeline.parameters.release_build >>
          steps:
            - run:
                name: Build
                command: |
                  bundle exec fastlane build_and_upload_stable_release skip_confirm:true create_gh_release:true
                no_output_timeout: 60m
      - slack/status:
          include_job_number_field: false
          include_project_field: false
          include_visit_job_action: false
          webhook: '${SLACK_BUILD_WEBHOOK}'
          failure_message: '${SLACK_FAILURE_MESSAGE}'
          success_message: '${SLACK_SUCCESS_MESSAGE}'
  translation-review-build:
    executor:
      name: ios/default
      <<: *xcode_version
    environment:
      HOMEBREW_NO_AUTO_UPDATE: 1
    steps:
      - fix-image
      - git/shallow-checkout
      - ios/install-dependencies:
            bundle-install: true
            pod-install: true
            cache-prefix: cache-prefix-{{ checksum ".circleci/cache-version" }}
      - run:
          name: Copy Secrets
          command: bundle exec fastlane run configure_apply
      - run:
          name: Install other tools
          command: |
            brew install imagemagick
            brew install ghostscript
            curl -sL https://sentry.io/get-cli/ | bash
      - run:
          name: Build
          command: |
            orig_version=`cat config/Version.internal.xcconfig | grep VERSION_SHORT | cut -d'=' -f2`
            sed -i '' "$(awk '/^VERSION_SHORT/{ print NR; exit }' "config/Version.internal.xcconfig")s/=.*/="${orig_version}"-`date +"%Y%d%m"`-"${CIRCLE_BUILD_NUM}"/" "config/Version.internal.xcconfig"

            VERSION_NAME="all-lang-build-${CIRCLE_BUILD_NUM}"
            echo "export VERSION_NAME=$VERSION_NAME" >> $BASH_ENV

            bundle exec fastlane build_for_translation_review version_name:$VERSION_NAME
          no_output_timeout: 60m
      - store_artifacts:
          path: Artifacts
          destination: Artifacts

workflows:
  wordpress_ios:
    when:
      and:
        - not: << pipeline.parameters.translation_review_build >>
        - not: << pipeline.parameters.beta_build >>
        - not: << pipeline.parameters.release_build >>
    jobs:
      - Build Tests:
          <<: *iphone_test_device
      - Unit Tests:
          <<: *iphone_test_device
          requires: [ "Build Tests" ]
      # Always run UI tests on develop and release branches
      - UI Tests:
          name: UI Tests (iPhone 11)
          <<: *iphone_test_device
          post-to-slack: true
          requires: [ "Build Tests" ]
          filters:
            branches:
              only:
                - develop
                - /^release.*/
      - UI Tests:
          name: UI Tests (iPad Air 4th generation)
          <<: *ipad_test_device
          post-to-slack: true
          requires: [ "Build Tests" ]
          filters:
            branches:
              only:
                - develop
                - /^release.*/
      #Optionally run UI tests on PRs
      - Optional Tests:
          type: approval
          requires: [ "Build Tests" ]
          filters:
            branches:
              ignore:
                - develop
                - /^release.*/
      - UI Tests:
          name: UI Tests (iPhone 11)
          <<: *iphone_test_device
          requires: [ "Optional Tests" ]
      - UI Tests:
          name: UI Tests (iPad Air 4th generation)
          <<: *ipad_test_device
          requires: [ "Optional Tests" ]
  Installable Build:
    when:
      and:
        - not: << pipeline.parameters.translation_review_build >>
        - not: << pipeline.parameters.beta_build >>
        - not: << pipeline.parameters.release_build >>
    jobs:
      - Hold:
          type: approval
          filters:
            branches:
              ignore: /pull\/[0-9]+/
      - Installable Build:
          requires: [Hold]
          filters:
            branches:
              ignore: /pull\/[0-9]+/
  Release Build:
    when:
      or: [ << pipeline.parameters.beta_build >>, << pipeline.parameters.release_build >> ]
    jobs:
      - Release Build
  Translation Review Build:
    when: << pipeline.parameters.translation_review_build >>
    jobs:
      - translation-review-build
